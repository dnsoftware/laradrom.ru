openapi: 3.1.0
info:
  title: laraapi
  version: '1.0'
servers:
  - url: 'http://api.laradrom.local/v1'
paths:
  /pintypes:
    parameters: []
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    id: 142
                    firstName: Alice
                    lastName: Smith
              examples: {}
            application/xml:
              schema:
                type: object
                properties: {}
          headers: {}
        '404':
          description: Список не найден
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      x-internal: false
      parameters: []
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
  /pinitems/create:
    post:
      summary: ''
      operationId: post-pinitems-create
      responses:
        '200':
          description: OK
      parameters:
        - schema:
            type: string
          in: query
      description: ''
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples: {}
        description: ''
    parameters: []
  /person/profile:
    get:
      summary: Your GET endpoint
      tags: []
      operationId: get-user-profile
      description: |-
        Получение информации пользователя самим залогиненным пользователем.
        Используется в профиле. Доступны все поля
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaraUser'
              examples:
                profile:
                  value:
                    id: 1
                    name: Вася Пупкин
                    email: user@example.com
                    current_team_id: 1
                    profile_photo_path: profile-photos/45454545.png
      security:
        - apiKey: []
    parameters: []
  /blogposts:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: get-posts
      description: Список постов блога
      parameters:
        - schema:
            type: string
          in: query
          name: search
          description: Строка поиска
        - schema:
            type: string
          in: query
    parameters: []
components:
  schemas:
    LaraUser:
      title: LaraUser
      type: object
      description: ''
      examples:
        - id: 0
          name: string
          email: user@example.com
          current_team_id: 0
          profile_photo_path: string
      x-internal: false
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
          minimum: 0
        name:
          type: string
        email:
          type: string
          format: email
        current_team_id:
          type: integer
        profile_photo_path:
          type: string
      required:
        - id
        - name
        - email
    PinItem:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 0
          user_id: string
          title: string
      properties:
        id:
          type: integer
        user_id:
          type: string
          minLength: 1
        title:
          type: string
          minLength: 1
      required:
        - id
        - user_id
        - title
    BlogPost:
      title: BlogPost
      type: object
      description: '    '
      properties:
        id:
          type: integer
        userId:
          type: integer
        categoryId:
          type: integer
        title:
          type: string
        content:
          type: string
  securitySchemes:
    apiKey:
      name: X-XSRF-TOKEN
      type: apiKey
      in: header
  requestBodies: {}
  examples: {}
  parameters: {}
